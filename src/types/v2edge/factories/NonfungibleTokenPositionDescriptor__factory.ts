/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  NonfungibleTokenPositionDescriptor,
  NonfungibleTokenPositionDescriptorInterface,
} from "../NonfungibleTokenPositionDescriptor";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_WETH9",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "WETH9",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token0",
        type: "address",
      },
      {
        internalType: "address",
        name: "token1",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "flipRatio",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "tokenRatioPriority",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract INonfungiblePositionManager",
        name: "positionManager",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516113e73803806113e783398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c61134a61009d6000398060d15280610116528061049a5280610503525061134a6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634aa4a4fc146100515780637e5af7711461006f5780639d7b0ea81461008f578063e9dc6375146100af575b600080fd5b6100596100cf565b604051610066919061119c565b60405180910390f35b61008261007d366004610ea2565b6100f3565b60405161006691906111b0565b6100a261009d366004610ee2565b610112565b60405161006691906111bb565b6100c26100bd366004610ee2565b610257565b60405161006691906111c4565b7f000000000000000000000000000000000000000000000000000000000000000081565b60006100ff8383610112565b6101098584610112565b13949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316836001600160a01b031614156101575750606319610251565b816001141561024d576001600160a01b03831673a0b86991c6218b36c1d19d4a2e9eb0ce3606eb48141561018e575061012c610251565b6001600160a01b03831673dac17f958d2ee523a2206206994597c13d831ec714156101bb575060c8610251565b6001600160a01b038316736b175474e89094c44da98b954eedeac495271d0f14156101e857506064610251565b6001600160a01b038316738daebade922df735c38c80c7ebd708af50815faa1415610216575060c719610251565b6001600160a01b038316732260fac5e5542a773aa44fbcfedf7c193bc2c5991415610245575061012b19610251565b506000610251565b5060005b92915050565b60606000806000806000876001600160a01b03166399fbab88886040518263ffffffff1660e01b815260040161028d91906111bb565b6101806040518083038186803b1580156102a657600080fd5b505afa1580156102ba573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102de9190611067565b5050505050965096509650965096505050600061039c896001600160a01b031663c45a01556040518163ffffffff1660e01b815260040160206040518083038186803b15801561032d57600080fd5b505afa158015610341573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103659190610e7f565b6040518060600160405280896001600160a01b03168152602001886001600160a01b031681526020018762ffffff16815250610791565b905060006103ad878761007d61086e565b9050600081156103bd57876103bf565b865b9050600082156103cf57876103d1565b885b90506000846001600160a01b0316633850c7bd6040518163ffffffff1660e01b815260040160e06040518083038186803b15801561040e57600080fd5b505afa158015610422573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104469190610fbe565b505050505091505073__$cea9be979eee3d87fb124d6cbb244bb0b5$__63c49917d7604051806101c001604052808f8152602001866001600160a01b03168152602001856001600160a01b031681526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316876001600160a01b0316146104df576104da87610872565b6104fc565b6040518060400160405280600381526020016208aa8960eb1b8152505b81526020017f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316866001600160a01b0316146105485761054386610872565b610565565b6040518060400160405280600381526020016208aa8960eb1b8152505b8152602001866001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b1580156105a357600080fd5b505afa1580156105b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105db919061104d565b60ff168152602001856001600160a01b031663313ce5676040518163ffffffff1660e01b815260040160206040518083038186803b15801561061c57600080fd5b505afa158015610630573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610654919061104d565b60ff16815260200187151581526020018a60020b81526020018960020b81526020018460020b8152602001886001600160a01b031663d0c93a7c6040518163ffffffff1660e01b815260040160206040518083038186803b1580156106b857600080fd5b505afa1580156106cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f09190610f0d565b60020b81526020018b62ffffff168152602001886001600160a01b03168152506040518263ffffffff1660e01b815260040161072c91906111d7565b60006040518083038186803b15801561074457600080fd5b505af4158015610758573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107809190810190610f27565b9d9c50505050505050505050505050565b600081602001516001600160a01b031682600001516001600160a01b0316106107b957600080fd5b50805160208083015160409384015184516001600160a01b0394851681850152939091168385015262ffffff166060808401919091528351808403820181526080840185528051908301207fff0000000000000000000000000000000000000000000000000000000000000060a085015294901b6bffffffffffffffffffffffff191660a183015260b5820193909352600060d5808301919091528251808303909101815260f5909101909152805191012090565b4690565b606060006108a0837f95d89b41000000000000000000000000000000000000000000000000000000006108c5565b90508051600014156108bd576108b583610b1a565b9150506108c0565b90505b919050565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000085161781529151815160609360009384936001600160a01b03891693919290918291908083835b6020831061095e5780518252601f19909201916020918201910161093f565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146109be576040519150601f19603f3d011682016040523d82523d6000602084013e6109c3565b606091505b50915091508115806109d457508051155b156109f2576040518060200160405280600081525092505050610251565b805160201415610a2a576000818060200190516020811015610a1357600080fd5b50519050610a2081610b27565b9350505050610251565b604081511115610b0257808060200190516020811015610a4957600080fd5b8101908080516040519392919084640100000000821115610a6957600080fd5b908301906020820185811115610a7e57600080fd5b8251640100000000811182820188101715610a9857600080fd5b82525081516020918201929091019080838360005b83811015610ac5578181015183820152602001610aad565b50505050905090810190601f168015610af25780820380516001836020036101000a031916815260200191505b5060405250505092505050610251565b50506040805160208101909152600081529392505050565b60606108bd826006610c67565b604080516020808252818301909252606091600091906020820181803683370190505090506000805b6020811015610bc9576000858260208110610b6757fe5b1a60f81b90507fff00000000000000000000000000000000000000000000000000000000000000811615610bc05780848481518110610ba257fe5b60200101906001600160f81b031916908160001a9053506001909201915b50600101610b50565b5060008167ffffffffffffffff81118015610be357600080fd5b506040519080825280601f01601f191660200182016040528015610c0e576020820181803683370190505b50905060005b82811015610c5e57838181518110610c2857fe5b602001015160f81c60f81b828281518110610c3f57fe5b60200101906001600160f81b031916908160001a905350600101610c14565b50949350505050565b606060028206158015610c7a5750600082115b8015610c87575060288211155b610cf257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f41646472657373537472696e675574696c3a20494e56414c49445f4c454e0000604482015290519081900360640190fd5b60008267ffffffffffffffff81118015610d0b57600080fd5b506040519080825280601f01601f191660200182016040528015610d36576020820181803683370190505b5090506001600160a01b03841660005b60028504811015610dda57600860138290030282901c600f600482901c1660f082168203610d7382610de4565b868560020281518110610d8257fe5b60200101906001600160f81b031916908160001a905350610da281610de4565b868560020260010181518110610db457fe5b60200101906001600160f81b031916908160001a9053505060019092019150610d469050565b5090949350505050565b6000600a8260ff161015610dff57506030810160f81b6108c0565b506037810160f81b6108c0565b80516108c081611325565b8051600281900b81146108c057600080fd5b80516fffffffffffffffffffffffffffffffff811681146108c057600080fd5b805161ffff811681146108c057600080fd5b805162ffffff811681146108c057600080fd5b805160ff811681146108c057600080fd5b600060208284031215610e90578081fd5b8151610e9b81611325565b9392505050565b600080600060608486031215610eb6578182fd5b8335610ec181611325565b92506020840135610ed181611325565b929592945050506040919091013590565b60008060408385031215610ef4578182fd5b8235610eff81611325565b946020939093013593505050565b600060208284031215610f1e578081fd5b610e9b82610e17565b600060208284031215610f38578081fd5b815167ffffffffffffffff80821115610f4f578283fd5b818401915084601f830112610f62578283fd5b815181811115610f6e57fe5b604051601f8201601f191681016020018381118282101715610f8c57fe5b604052818152838201602001871015610fa3578485fd5b610fb48260208301602087016112f5565b9695505050505050565b600080600080600080600060e0888a031215610fd8578283fd5b8751610fe381611325565b9650610ff160208901610e17565b9550610fff60408901610e49565b945061100d60608901610e49565b935061101b60808901610e49565b925061102960a08901610e6e565b915060c0880151801515811461103d578182fd5b8091505092959891949750929550565b60006020828403121561105e578081fd5b610e9b82610e6e565b6000806000806000806000806000806000806101808d8f031215611089578485fd5b8c516bffffffffffffffffffffffff811681146110a4578586fd5b9b506110b260208e01610e0c565b9a506110c060408e01610e0c565b99506110ce60608e01610e0c565b98506110dc60808e01610e5b565b97506110ea60a08e01610e17565b96506110f860c08e01610e17565b955061110660e08e01610e29565b94506101008d015193506101208d015192506111256101408e01610e29565b91506111346101608e01610e29565b90509295989b509295989b509295989b565b6001600160a01b03169052565b15159052565b60020b9052565b600081518084526111788160208601602086016112f5565b601f01601f19169290920160200192915050565b62ffffff169052565b60ff169052565b6001600160a01b0391909116815260200190565b901515815260200190565b90815260200190565b600060208252610e9b6020830184611160565b6000602082528251602083015260208301516111f66040840182611146565b5060408301516112096060840182611146565b5060608301516101c08060808501526112266101e0850183611160565b91506080850151601f198584030160a08601526112438382611160565b92505060a085015161125860c0860182611195565b5060c085015161126b60e0860182611195565b5060e085015161010061128081870183611153565b860151905061012061129486820183611159565b86015190506101406112a886820183611159565b86015190506101606112bc86820183611159565b86015190506101806112d086820183611159565b86015190506101a06112e48682018361118c565b8601519050610dda85830182611146565b60005b838110156113105781810151838201526020016112f8565b8381111561131f576000848401525b50505050565b6001600160a01b038116811461133a57600080fd5b5056fea164736f6c6343000706000a";

type NonfungibleTokenPositionDescriptorConstructorParams =
  | [
      linkLibraryAddresses: NonfungibleTokenPositionDescriptorLibraryAddresses,
      signer?: Signer
    ]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NonfungibleTokenPositionDescriptorConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => {
  return (
    typeof xs[0] === "string" ||
    (Array.isArray as (arg: any) => arg is readonly any[])(xs[0]) ||
    "_isInterface" in xs[0]
  );
};

export class NonfungibleTokenPositionDescriptor__factory extends ContractFactory {
  constructor(...args: NonfungibleTokenPositionDescriptorConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      const [linkLibraryAddresses, signer] = args;
      super(
        _abi,
        NonfungibleTokenPositionDescriptor__factory.linkBytecode(
          linkLibraryAddresses
        ),
        signer
      );
    }
  }

  static linkBytecode(
    linkLibraryAddresses: NonfungibleTokenPositionDescriptorLibraryAddresses
  ): string {
    let linkedBytecode = _bytecode;

    linkedBytecode = linkedBytecode.replace(
      new RegExp("__\\$cea9be979eee3d87fb124d6cbb244bb0b5\\$__", "g"),
      linkLibraryAddresses[
        "contracts/libraries/NFTDescriptor.sol:NFTDescriptor"
      ]
        .replace(/^0x/, "")
        .toLowerCase()
    );

    return linkedBytecode;
  }

  deploy(
    _WETH9: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<NonfungibleTokenPositionDescriptor> {
    return super.deploy(
      _WETH9,
      overrides || {}
    ) as Promise<NonfungibleTokenPositionDescriptor>;
  }
  getDeployTransaction(
    _WETH9: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_WETH9, overrides || {});
  }
  attach(address: string): NonfungibleTokenPositionDescriptor {
    return super.attach(address) as NonfungibleTokenPositionDescriptor;
  }
  connect(signer: Signer): NonfungibleTokenPositionDescriptor__factory {
    return super.connect(signer) as NonfungibleTokenPositionDescriptor__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NonfungibleTokenPositionDescriptorInterface {
    return new utils.Interface(
      _abi
    ) as NonfungibleTokenPositionDescriptorInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NonfungibleTokenPositionDescriptor {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NonfungibleTokenPositionDescriptor;
  }
}

export interface NonfungibleTokenPositionDescriptorLibraryAddresses {
  ["contracts/libraries/NFTDescriptor.sol:NFTDescriptor"]: string;
}
